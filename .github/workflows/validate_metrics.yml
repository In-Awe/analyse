name: Validate Backtest Metrics

on:
  push:
    branches:
      - add-ci-and-tools
      - main
      - Test5-1
  pull_request:
    branches:
      - "**"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (best-effort)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi
          # Tools may rely on pandas/numpy/pyarrow
          pip install pandas numpy pyarrow || true

      - name: Show repo state
        run: |
          git status
          ls -la

      # If your workflow runs a backtest step, place it above this point.
      # Otherwise, this job will only validate any pre-existing artifacts in the repo/CI run.

      - name: Run backtest wrapper (if present)
        run: |
          if [ -f scripts/run_backtest_with_summary.py ]; then
            echo "Found wrapper: running scripts/run_backtest_with_summary.py"
            python scripts/run_backtest_with_summary.py || echo "Backtest wrapper exited non-zero, continuing to validation"
          else
            echo "No run_backtest_with_summary.py wrapper found; skipping."
          fi

      - name: Run atomic summary writer (recreate any missing summaries)
        run: |
          python tools/write_summary_atomic.py

      - name: Show artifacts tree (pre-validation)
        run: |
          if [ -d artifacts ]; then
            echo "Artifacts directory present:"
            ls -R artifacts || true
            echo "---- Found summary.json files ----"
            find artifacts -type f -name 'summary.json' -print || true
            echo "---- Dump first few summary.json files ----"
            for f in $(find artifacts -type f -name 'summary.json' | head -n 5); do
              echo ">>> $f"
              head -n 200 "$f" || true
              echo
            done
          else
            echo "No artifacts/ directory found."
          fi

      - name: Validate & compare metrics
        run: |
          python tools/validate_and_compare_ci.py

      - name: Show artifacts tree (post-validation)
        if: always()
        run: |
          if [ -d artifacts ]; then
            echo "Artifacts after validation:"
            ls -R artifacts || true
          fi

      - name: Upload artifacts (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backtest-artifacts
          path: artifacts
          if-no-files-found: warn
